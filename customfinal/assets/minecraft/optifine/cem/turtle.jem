{
	"textureSize": [128, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -5, 10],
			"submodels": [
				{
					"id": "Created_by_FreshLX",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"fins.ty": "0",
					"body_rotation.rx": "if(is_in_water, sin(limb_swing/2+age/if(is_child, 7, 15))/20 +sin(limb_swing*if(is_child, 1.5, 1.3)/3)/10*if(is_child, 2, 1), clamp(-2*limb_speed +torad(head_pitch)/5, torad(-5), 0) +sin(limb_swing/2+age/if(is_child, 5, 25))/60*if(is_child, 1, clamp(-head_pitch/30, -1, 1)))",
					"body_rotation.ry": "if(is_in_water, clamp(torad(head_yaw)/2*clamp(-1+limb_speed*4, -1, 1), torad(-30), torad(30)), cos(limb_swing*if(is_child, 1.5, 1.3))/20)",
					"body_rotation.rz": "if(is_in_water, 0, -sin(limb_swing*if(is_child, 1.5, 1.3))/10)",
					"body_rotation.ty": "if(is_in_water, -2, -sin(torad(45)+limb_swing*if(is_child, 1.5, 1.3)*2)*1.4*limb_speed)",
					"body_rotation.tz": "if(is_in_water, cos(limb_swing/2+age/if(is_child, 7, 15))/2 +cos(limb_swing*if(is_child, 1.5, 1.3)/3)*if(is_child, 4, 1), clamp(30*limb_speed -(head_pitch/30), 0, 1)) -15 +if(is_child, 1, 0)",
					"head2.rx": "torad(-90) +if(is_in_water, sin(torad(90)+limb_swing/2+age/if(is_child, 7, 15))/30 +cos(limb_swing*if(is_child, 1.5, 1.3)/3)/8*if(is_child, 2, 1), if(is_child, torad(-10), 0) +sin(limb_swing/2+age/if(is_child, 5, 25))/30) +clamp(torad(head_pitch), torad(-60), torad(60))",
					"head2.ry": "clamp( torad(head_yaw)/6 +clamp(torad(20)*clamp(head_pitch/40, -1, 1) +torad(90)*(head_yaw/40), torad(-20), torad(20)), torad(-45), torad(45)) +if(is_in_water, -body_rotation.ry, sin(limb_swing*if(is_child, 1.5, 1.3))/10)",
					"head2.rz": "clamp(-torad(head_yaw)/2 +clamp(torad(45)*clamp(head_pitch/40, -1, 1) +torad(90)*(head_yaw/40), torad(-45), torad(45)), torad(-45), torad(45)) +if(is_in_water, 0, sin(limb_swing*if(is_child, 1.5, 1.3))/10)",
					"head2.tz": "if(is_in_water, 0, if(is_child, 2, 0) +clamp(-1+limb_speed*20 -(head_pitch/30), -1, 0)) +if(is_in_water, 0, -cos(limb_swing/2+age/if(is_child, 5, 25))/6)"
				},
				{
					"right_front_fin.rx": "torad(-90) +if(is_in_water, torad(20) -sin(torad(90)+limb_swing*if(is_child, 1.5, 1.3)/3)/if(is_child, 1, 2)*limb_speed, torad(20) +sin(torad(-45)+limb_swing*if(is_child, 1.5, 1.3))/3)",
					"left_front_fin.rx": " torad(-90) +if(is_in_water, torad(20) -sin(torad(90)+limb_swing*if(is_child, 1.5, 1.3)/3)/if(is_child, 1, 2)*limb_speed, torad(20) -sin(torad(-45)+limb_swing*if(is_child, 1.5, 1.3))/3)",
					"right_front_fin.ry": "if(is_in_water,  sin(limb_swing/2+age/if(is_child, 7, 15))/8 +torad(-30) +torad( 30)*limb_speed +clamp( sin(limb_swing*if(is_child, 1.5, 1.3)/3)*2.5/if(is_child, 1, 2)*limb_speed, torad(-80), torad(60)) +body_rotation.ry, clamp( cos(limb_swing*if(is_child, 1.5, 1.3))/if(is_child, 1, 4)*clamp(limb_speed*10, 0, 1), 0, torad( 45))) +clamp( torad(head_pitch)/7, torad(-8), 0)",
					"left_front_fin.ry": " if(is_in_water, -sin(limb_swing/2+age/if(is_child, 7, 15))/8 +torad( 30) +torad(-30)*limb_speed +clamp(-sin(limb_swing*if(is_child, 1.5, 1.3)/3)*2.5/if(is_child, 1, 2)*limb_speed, torad(-60), torad(80)) +body_rotation.ry, clamp( cos(limb_swing*if(is_child, 1.5, 1.3))/if(is_child, 1, 4)*clamp(limb_speed*10, 0, 1), torad(-45), 0)) +clamp(-torad(head_pitch)/7, 0, torad( 8))",
					"right_front_fin.rz": "if(is_in_water, torad(-20) -clamp(head_yaw/90, torad(-30), torad(30)), torad(-30) +sin(limb_swing*if(is_child, 1.5, 1.3))/1.5)",
					"left_front_fin.rz": " if(is_in_water, torad( 20) -clamp(head_yaw/90, torad(-30), torad(30)), torad( 30) +sin(limb_swing*if(is_child, 1.5, 1.3))/1.5)",
					"right_front_fin.tx": "-6 +if(is_in_water, clamp(-torad(head_yaw)*3*clamp(-1+limb_speed*4, -1, 1), -1, 2), 0)",
					"left_front_fin.tx": "  6 +if(is_in_water, clamp(-torad(head_yaw)*3*clamp(-1+limb_speed*4, -1, 1), -2, 1), 0)",
					"right_front_fin.ty": "-5 +if(is_in_water, 0, -sin(limb_swing*if(is_child, 1.5, 1.3))*1.6) +body_rotation.ty",
					"left_front_fin.ty": " -5 +if(is_in_water, 0,  sin(limb_swing*if(is_child, 1.5, 1.3))*1.6) +body_rotation.ty",
					"right_front_fin.tz": "-6 +if(is_in_water, if(is_child, 0, -1) +sin(torad(90)+limb_swing/2+age/if(is_child, 7, 15))/2 +cos(torad(45)+limb_swing*if(is_child, 1.5, 1.3)/3)*2*if(is_child, 2, 1) +clamp( torad(head_yaw)*4*clamp(-1+limb_speed*4, -1, 1), -2, 4), -0.5 +clamp( cos(limb_swing*if(is_child, 1.5, 1.3))/2*clamp(limb_speed*30, 0, 3), 0, 3) +sin(torad(-45)+limb_swing*if(is_child, 1.5, 1.3)) +clamp(-(head_pitch/40), 0, 1))",
					"left_front_fin.tz": " -6 +if(is_in_water, if(is_child, 0, -1) +sin(torad(90)+limb_swing/2+age/if(is_child, 7, 15))/2 +cos(torad(45)+limb_swing*if(is_child, 1.5, 1.3)/3)*2*if(is_child, 2, 1) +clamp(-torad(head_yaw)*4*clamp(-1+limb_speed*4, -1, 1), -2, 4), -0.5 +clamp(-cos(limb_swing*if(is_child, 1.5, 1.3))/2*clamp(limb_speed*30, 0, 3), 0, 3) -sin(torad(-45)+limb_swing*if(is_child, 1.5, 1.3)) +clamp(-(head_pitch/40), 0, 1))"
				},
				{
					"right_back_fin.rx": "torad(-90) +if(is_in_water, sin(torad(-90)+limb_swing/2+age/if(is_child, 7, 15))/10 -cos(limb_swing*if(is_child, 1.5, 1.3)/3)/6*if(is_child, 2, 1) +clamp(torad(-20)+limb_speed, torad(-20), 0), clamp(-cos(limb_swing*if(is_child, 1.5, 1.3))/3*clamp(limb_speed*10, 0, 1), 0, torad( 45)) +clamp(torad(-10)+limb_speed*10, torad(-10), 0) )",
					"left_back_fin.rx": " torad(-90) +if(is_in_water, sin(torad(-90)+limb_swing/2+age/if(is_child, 7, 15))/10 -cos(limb_swing*if(is_child, 1.5, 1.3)/3)/6*if(is_child, 2, 1) +clamp(torad(-20)+limb_speed, torad(-20), 0), clamp( cos(limb_swing*if(is_child, 1.5, 1.3))/3*clamp(limb_speed*10, 0, 1), 0, torad( 45)) +clamp(torad(-10)+limb_speed*10, torad(-10), 0) )",
					"right_back_fin.ry": "torad(-10) +if(is_in_water, torad(-20) +clamp( head_yaw/90, torad(-20), torad(20)) +body_rotation.ry, sin(torad(-45)+limb_swing*if(is_child, 1.5, 1.3))/if(is_child, 1, 3)*clamp(limb_speed*10, 0, 1))",
					"left_back_fin.ry": " torad( 10) +if(is_in_water, torad( 20) +clamp(-head_yaw/90, torad(-20), torad(20)) +body_rotation.ry, sin(torad(-45)+limb_swing*if(is_child, 1.5, 1.3))/if(is_child, 1, 3)*clamp(limb_speed*10, 0, 1))",
					"right_back_fin.rz": "torad( 15) +if(is_in_water, clamp(torad(-20)*limb_speed*3, torad(-20), 0)*if(is_child, 0.5, 1) +clamp(head_yaw/90, torad(-30), torad(30)), -sin(limb_swing*if(is_child, 1.5, 1.3))/5)",
					"left_back_fin.rz": " torad(-15) +if(is_in_water, clamp(torad( 20)*limb_speed*3, 0, torad( 20))*if(is_child, 0.5, 1) +clamp(head_yaw/90, torad(-30), torad(30)), -sin(limb_swing*if(is_child, 1.5, 1.3))/5)",
					"right_back_fin.tx": "-4 +if(is_in_water, 0, -sin(limb_swing*if(is_child, 1.5, 1.3))/2 +clamp(-1*limb_speed*10, -1, 0))",
					"left_back_fin.tx": "  4 +if(is_in_water, 0, -sin(limb_swing*if(is_child, 1.5, 1.3))/2 +clamp( 1*limb_speed*10,  0, 1))",
					"right_back_fin.ty": "8 +if(is_in_water, 2,  sin(torad(45)+limb_swing*if(is_child, 1.5, 1.3))*3*clamp(limb_speed*10, 0, 1)) +body_rotation.ty",
					"left_back_fin.ty": " 8 +if(is_in_water, 2, -sin(torad(45)+limb_swing*if(is_child, 1.5, 1.3))*3*clamp(limb_speed*10, 0, 1)) +body_rotation.ty",
					"right_back_fin.tz": "-8 +if(is_in_water, -1.5 +sin(torad(45)+limb_swing/2+age/if(is_child, 7, 15)) +cos(torad(-45)+limb_swing*if(is_child, 1.5, 1.3)/3)*1.5*if(is_child, 3, 1) +clamp( torad(head_yaw)*3*clamp(-1+limb_speed*4, -1, 1), -3, 3), -2*clamp(limb_speed*10, 0, 1))",
					"left_back_fin.tz": " -8 +if(is_in_water, -1.5 +sin(torad(45)+limb_swing/2+age/if(is_child, 7, 15)) +cos(torad(-45)+limb_swing*if(is_child, 1.5, 1.3)/3)*1.5*if(is_child, 3, 1) +clamp(-torad(head_yaw)*3*clamp(-1+limb_speed*4, -1, 1), -3, 3), -2*clamp(limb_speed*10, 0, 1))"
				},
				{
					"head2.sx": "if(is_child, 1.8, 1)",
					"head2.sy": "head2.sx",
					"head2.sz": "head2.sx",
					"right_back_fin.sx": "if(is_child, 1.5, 1)",
					"right_back_fin.sy": "head2.sx",
					"right_back_fin.sz": "if(is_child, 1.3, 1)",
					"left_back_fin.sx": "head2.sx",
					"left_back_fin.sy": "head2.sx",
					"left_back_fin.sz": "if(is_child, 1.3, 1)",
					"right_front_fin.sx": "if(is_child, 1.5, 1)",
					"right_front_fin.sy": "head2.sx",
					"right_front_fin.sz": "head2.sx",
					"left_front_fin.sx": "head2.sx",
					"left_front_fin.sy": "head2.sx",
					"left_front_fin.sz": "head2.sx"
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -9, 6],
			"submodels": [
				{
					"id": "body_rotation",
					"invertAxis": "xy",
					"translate": [0, 4, 0],
					"rotate": [-90, 0, 0],
					"boxes": [
						{
							"coordinates": [-5.5, -8, 2, 11, 15, 3],
							"uvNorth": [4, 40, 15, 55],
							"uvEast": [1, 40, 4, 55],
							"uvSouth": [18, 40, 29, 55],
							"uvWest": [15, 40, 18, 55],
							"uvUp": [15, 40, 4, 37],
							"uvDown": [26, 37, 15, 40]
						},
						{
							"coordinates": [-9.5, -11, -1, 19, 18, 3],
							"uvNorth": [33, 40, 52, 58],
							"uvEast": [30, 40, 33, 58],
							"uvSouth": [55, 40, 74, 58],
							"uvWest": [52, 40, 55, 58],
							"uvUp": [52, 40, 33, 37],
							"uvDown": [71, 37, 52, 40]
						},
						{
							"coordinates": [-6.5, -15, -1, 13, 4, 3],
							"uvNorth": [33, 4, 46, 8],
							"uvEast": [30, 4, 33, 8],
							"uvSouth": [49, 4, 62, 8],
							"uvWest": [46, 4, 49, 8],
							"uvUp": [46, 4, 33, 1],
							"uvDown": [59, 1, 46, 4]
						},
						{
							"coordinates": [-6.5, -11, -4, 13, 18, 3],
							"uvNorth": [78, 40, 91, 58],
							"uvEast": [75, 40, 78, 58],
							"uvSouth": [94, 40, 107, 58],
							"uvWest": [91, 40, 94, 58],
							"uvUp": [91, 40, 78, 37],
							"uvDown": [104, 37, 91, 40]
						}
					],
					"submodels": [
						{
							"id": "head2",
							"invertAxis": "xy",
							"translate": [0, 7, 0],
							"rotate": [90, 0, 0],
							"boxes": [
								{
									"coordinates": [-2.5, -3, -6, 5, 5, 6],
									"uvNorth": [9, 7, 14, 12],
									"uvEast": [3, 7, 9, 12],
									"uvSouth": [20, 7, 25, 12],
									"uvWest": [14, 7, 20, 12],
									"uvUp": [14, 7, 9, 1],
									"uvDown": [19, 1, 14, 7]
								}
							]
						}
					]
				},
				{
					"id": "fins",
					"invertAxis": "xy",
					"translate": [0, 13, -10],
					"submodels": [
						{
							"id": "right_front_fin",
							"invertAxis": "xy",
							"translate": [6.5, -10, 9],
							"submodels": [
								{
									"id": "bone3",
									"invertAxis": "xy",
									"translate": [0, 0, -3],
									"boxes": [
										{
											"coordinates": [-0.5, -1, -2, 12, 1, 5],
											"uvNorth": [35, 35, 47, 36],
											"uvEast": [30, 35, 35, 36],
											"uvSouth": [52, 35, 64, 36],
											"uvWest": [47, 35, 52, 36],
											"uvUp": [47, 35, 35, 30],
											"uvDown": [59, 30, 47, 35]
										}
									]
								}
							]
						},
						{
							"id": "left_front_fin",
							"invertAxis": "xy",
							"translate": [-6.5, -10, 9],
							"submodels": [
								{
									"id": "bone4",
									"invertAxis": "xy",
									"translate": [0, 0, -3],
									"boxes": [
										{
											"coordinates": [-11.5, -1, -2, 12, 1, 5],
											"uvNorth": [35, 23, 47, 24],
											"uvEast": [30, 23, 35, 24],
											"uvSouth": [52, 23, 64, 24],
											"uvWest": [47, 23, 52, 24],
											"uvUp": [47, 23, 35, 18],
											"uvDown": [59, 18, 47, 23]
										}
									]
								}
							]
						},
						{
							"id": "left_back_fin",
							"invertAxis": "xy",
							"translate": [-3.5, -11.5, 21],
							"submodels": [
								{
									"id": "bone2",
									"invertAxis": "xy",
									"translate": [3, 1.5, 0],
									"rotate": [0, -10, 0],
									"boxes": [
										{
											"coordinates": [-4, -1, 0, 4, 1, 10],
											"uvNorth": [11, 23, 15, 24],
											"uvEast": [1, 23, 11, 24],
											"uvSouth": [25, 23, 29, 24],
											"uvWest": [15, 23, 25, 24],
											"uvUp": [15, 23, 11, 13],
											"uvDown": [19, 13, 15, 23]
										}
									]
								}
							]
						},
						{
							"id": "right_back_fin",
							"invertAxis": "xy",
							"translate": [3.5, -11.5, 21],
							"submodels": [
								{
									"id": "bone",
									"invertAxis": "xy",
									"translate": [-3, 1.5, 0],
									"rotate": [0, 10, 0],
									"boxes": [
										{
											"coordinates": [0, -1, 0, 4, 1, 10],
											"uvNorth": [11, 35, 15, 36],
											"uvEast": [1, 35, 11, 36],
											"uvSouth": [25, 35, 29, 36],
											"uvWest": [15, 35, 25, 36],
											"uvUp": [15, 35, 11, 25],
											"uvDown": [19, 25, 15, 35]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "body2",
			"id": "body2",
			"invertAxis": "xy",
			"translate": [0, -9, 6]
		},
		{
			"part": "leg1",
			"id": "leg1",
			"invertAxis": "xy",
			"translate": [-3.5, -2, -11]
		},
		{
			"part": "leg2",
			"id": "leg2",
			"invertAxis": "xy",
			"translate": [3.5, -2, -11]
		},
		{
			"part": "leg3",
			"id": "leg3",
			"invertAxis": "xy",
			"translate": [-5, -3, 4]
		},
		{
			"part": "leg4",
			"id": "leg4",
			"invertAxis": "xy",
			"translate": [5, -3, 4]
		}
	]
}